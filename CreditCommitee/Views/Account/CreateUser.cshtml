@model CreditCommitee.ViewModels.CreateNewUserViewModel
@{
    ViewBag.Title = "Create New User";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>@ViewBag.Title</h5>
                    <div class="ibox-tools">
                        <a href='@Url.Action("Index", "CommiteeProgrammes")' class="btn-outline btn-danger" style="padding:2px 5px 2px 5px  !important">
                            <i class="fa fa-arrow-circle-left"></i>
                            <span>Back</span>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    @if (ViewBag.ErrorMsg != null)
                    {
                        <div class="ibox-content ibox-heading" style="background-color: #f2dede;">
                            <h3>@ViewBag.ErrorMsg.summary</h3>
                            <small><i class="fa fa-phone"></i> @ViewBag.ErrorMsg.detail</small>
                        </div>
                    }
                    else
                    {
                        <div class="form-horizontal">
                            @using (Html.BeginForm("CreateUser", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "m-t", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary("", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Email)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Password)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Role", new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("Role", new SelectList(ViewBag.Roles, "name", "name"), "Please Select...", new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-primary" />
                                        @Html.ActionLink("Cancel", "Index", "", new { @class = "btn btn-white" })
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}