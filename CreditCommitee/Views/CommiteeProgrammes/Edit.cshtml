@model Commitee.Models.CommiteeProgramme

@{
    ViewBag.Title = "Edit";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Edit</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("List", "Index")
            </li>
            <li class="active">
                <strong>Edit</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
</div>




<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Edit CommiteeProgramme</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.id)

                            <div class="form-group">
                                @Html.LabelFor(model => model.programmeName, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.programmeName)
                                    @Html.ValidationMessageFor(model => model.programmeName)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.programmeName, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.programmeStatus, EnumHelper.GetSelectList(typeof(Commitee.Models.CommiteeProgramme.CommiteeProgrammeStatus)), "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.programmeStatus)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.programmeDate, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.programmeDate)
                                    @Html.ValidationMessageFor(model => model.programmeDate)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.createdBy, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.createdBy)
                                    @Html.ValidationMessageFor(model => model.createdBy)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.createDate, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.createDate)
                                    @Html.ValidationMessageFor(model => model.createDate)
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-primary" />
                                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white" })
                                </div>
                            </div>
                        </div>
                    }


                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
